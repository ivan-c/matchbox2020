---
version: "3.4"
x-dnsmasq-base: &dnsmasq_base
  build:
    dockerfile: Dockerfile.dnsmasq
    context: .
  entrypoint:
    - dnsmasq
    - --log-facility=-
    - --keep-in-foreground
    - --user=root

    # disable DNS (port 53)
    - --port=0

services:
  matchbox:
    build:
      dockerfile: Dockerfile.matchbox
      context: .
    volumes:
      - ./matchbox:/tmp/matchbox:ro
      - ./docker-entrypoint.sh:/bin/entrypoint.sh:ro
      - ./docker-entrypoint.d:/docker-entrypoint.d:ro
    environment:
      MATCHBOX_LOG_LEVEL: debug
      MATCHBOX_ADDRESS: 0.0.0.0:8080
    entrypoint: /bin/entrypoint.sh
    command: /bin/matchbox
    env_file: matchbox.env
    ports:
      - 8080:8080

  dhcpd:
    <<: *dnsmasq_base
    # TODO use dhcp relay
    network_mode: host
    command:
      - --log-queries
      - --log-dhcp

      - --dhcp-range=192.168.1.0,proxy

      # if DHCP userclass is iPXE, add ipxe tag
      - --dhcp-userclass=set:ipxe,iPXE

      # Set Raspberry Pi tag if beginning of DHCP option 97 (UUID/GUID) matches known values
      - --dhcp-match=set:raspi,option:client-machine-id,00:52:50


      # 0th request: download Raspberry Pi firmware
      # Raspberry Pi uses the same client-arch as PC BIOS and downloads its own set of files
      - --pxe-service=tag:!ipxe,tag:raspi,x86PC,Raspberry Pi Boot,Netboot RaspberryPi,0.0.0.0

      # 1st request: download iPXE image
      # 0.0.0.0 is a special value recognized by dnsmasq as the dnsmasq IP address
      - --pxe-service=tag:!ipxe,x86PC,Boot iPXE with BIOS,ipxe/undionly.kpxe,0.0.0.0
      - --pxe-service=tag:!ipxe,x86-64_EFI,Boot iPXE with EFI,ipxe/ipxe.efi,0.0.0.0
      - --pxe-service=tag:!ipxe,ARM64_EFI,Boot iPXE with EFI,ipxe/ipxe.arm64.efi,0.0.0.0

      # DHCP option 66 (Server-Name) is only populated for dnsmasq pxe-services
      # TODO consolidate to single dhcp-boot entry when host can be parsed from DHCP filename (URL), or manually set DHCP option 66
      # 2nd request: download iPXE script via HTTP and run
      - --pxe-service=tag:ipxe,x86-64_EFI,Boot system-specific iPXE script,http://${server}:8080/assets/introspect.ipxe
      - --pxe-service=tag:ipxe,x86PC,Boot system-specific iPXE script,http://${server}:8080/assets/introspect.ipxe
      - --pxe-service=tag:ipxe,ARM64_EFI,Boot system-specific iPXE script,http://${server}:8080/assets/introspect.ipxe
    cap_add:
      - NET_ADMIN

  tftpd:
    <<: *dnsmasq_base
    command:
      - --enable-tftp
      - --tftp-root=/var/lib/tftpboot
    ports:
      - "69:69/udp"

    # TODO build universal (not machine-specific) tftp files into docker image
    # https://github.com/pftf/RPi4/issues/59
    volumes:
      - ./tftpboot:/var/lib/tftpboot
